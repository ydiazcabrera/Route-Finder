@model RouteFinder.Models.Route
@{
    Layout = null;
    string gMaps = ConfigReaderDAL.ReadSetting("gmaps_key");

    var TotalTime = new TimeSpan();
    string TotalTimeFormat = "";
    if (Model.TotalTravelTime < 60)
    {
        TotalTime = TimeSpan.FromMinutes(Model.TotalTravelTime);
        TotalTimeFormat = TotalTime.ToString(@"mm") + "mins";

    }
    else
    {
        TotalTime = TimeSpan.FromMinutes(Model.TotalTravelTime);
        TotalTimeFormat = TotalTime.ToString(@"h:mm") + "mins";
    }

}

<p>Mode of Transportation @Model.ModeOfTransportation</p>
<p >Total Distance @Math.Round(@Model.TotalDistance,1) Miles</p>
<p>Total Time @TotalTimeFormat</p>


<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Simple Polylines</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
                * element that contains the map. */
        #map {
            height: 70%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    <script>

        var map;
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: @Html.Raw(ViewBag.MapCenter),
            mapTypeId: 'terrain'
            });
            // Holds the route coordinates in the correct format to be displayed on the map when used in flightPath
            var routeCoordinates = @Html.Raw(Model.RouteCoordinatesString);

            //Create a line from the routeCoordinates
            var routePath = new google.maps.Polyline({
                path: routeCoordinates,
                geodesic: true,
                strokeColor: '#5600FF',
                strokeOpacity: .5,
                strokeWeight: 3
            });

          routePath.setMap(map);
        }
        google.maps.event.addDomListener(window, 'load', init_map);

    </script>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>

<div>

    <p> Directctions</p>
    <p>@Model.Maneuvers</p>

</div>

<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        <div id="map"></div>

        <script async defer
                src='https://maps.googleapis.com/maps/api/js?key=@gMaps&callback=initMap'>
        </script>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
</body>
