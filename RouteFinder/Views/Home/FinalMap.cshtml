@model RouteFinder.Models.Route
@using RouteFinder.Models
@{
    Layout = null;
    string gMaps = ConfigReaderDAL.ReadSetting("gmaps_key");

    var totalTime = new TimeSpan();
    string totalTimeFormat = "";
    if (Model.TotalTravelTime < 60)
    {
        totalTime = TimeSpan.FromMinutes(Model.TotalTravelTime);
        totalTimeFormat = totalTime.ToString(@"mm") + "min";

    }
    else
    {
        totalTime = TimeSpan.FromMinutes(Model.TotalTravelTime);
        string hrTimeFormat = totalTime.ToString(@"hh");
        string minTimeFormat = totalTime.ToString(@"%m");
        totalTimeFormat = $"{hrTimeFormat} h {minTimeFormat} min"; 
    }


    string modeOfTransportationMessage = "";
    if(Model.ModeOfTransportation == "pedestrian")
    {
        modeOfTransportationMessage = "Walking";
    }
    else
    {
        modeOfTransportationMessage = "Biking";
    }
}

<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Simple Polylines</title>
    <style>
        /* Always set the map height explicitly to define the size of the div
                * element that contains the map. */
        #map {
            height: 70%;
            width: 100%;
        }
    </style>
    <script>
        var map;
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12,
            center: @Html.Raw(ViewBag.MapCenter),
            mapTypeId: 'terrain'
            });
            // Holds the route coordinates in the correct format to be displayed on the map when used in flightPath
            var routeCoordinates = @Html.Raw(Model.RouteCoordinatesString);

            //Create a line from the routeCoordinates
            var routePath = new google.maps.Polyline({
                path: routeCoordinates,
                geodesic: true,
                strokeColor: '#5600FF',
                strokeOpacity: .5,
                strokeWeight: 3
            });

          routePath.setMap(map);
        }
        google.maps.event.addDomListener(window, 'load', init_map);
    </script>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>

<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Prime Path", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                </ul>
            </div>
        </div>
    </div>
    <div id="map"></div>
    <div>
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6">
                @*ToDo - redirect to a final page and save the map and instructions as a pdf?  *@
                <form action="~/Home/FinalMap" method="post" id="SafeWalk" style="margin: 5px;">
                    <div class="row">
                        <table class="table table-condensed table-bordered" id="Walk" style="margin-bottom: 2px;">
                            <tr class="text-center success">
                                <td colspan="3"><h4>@modeOfTransportationMessage Directions</h4></td>

                            </tr>
                            <tr class="text-center success">
                                <td colspan="1"><u>Instruction</u></td>
                                <td colspan="1"><u>Distance</u><br />@string.Format("{0:0.0}", Model.TotalDistance) mi</td>
                                <td colspan="1"><u>Time</u><br />@totalTimeFormat</td>
                            </tr>

                            @foreach (Maneuver m in Model.Maneuvers)
                            {
                                <tr>
                                    <td>@Html.Raw(m.Instruction)</td>
                                    <td>@string.Format("{0:0.0}", m.Distance)</td>
                                    <td>@((int)m.TravelTime) min</td>
                                </tr>
                            }

                        </table>
                    </div>
                    <div class="row text-center" style="margin-top: 2px;">
                        <input type="submit" value="Save to Device" class="btn btn-success" />
                    </div>
                </form>
            </div>
            <div class="col-md-3"></div>
        </div>
    </div>
    <div class="container body-content">
        <script async defer
                src='https://maps.googleapis.com/maps/api/js?key=@gMaps&callback=initMap'>
        </script>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
</body>
